// Generated by view binder compiler. Do not edit!
package kr.co.lion.mungnolja_nayeon1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.lion.mungnolja_nayeon1.R;

public final class RowPetSitterReviewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialCardView cardRowPetSitterReviewWriter;

  @NonNull
  public final CircleImageView imageViewRowPetSitterReviewWriter;

  @NonNull
  public final RatingBar ratingBarRowPetSitterReview;

  @NonNull
  public final TextView textViewRowPetSitterReviewAgoTime;

  @NonNull
  public final TextView textViewRowPetSitterReviewDetail;

  @NonNull
  public final TextView textViewRowPetSitterReviewScore;

  @NonNull
  public final TextView textViewRowPetSitterReviewWriterName;

  private RowPetSitterReviewBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialCardView cardRowPetSitterReviewWriter,
      @NonNull CircleImageView imageViewRowPetSitterReviewWriter,
      @NonNull RatingBar ratingBarRowPetSitterReview,
      @NonNull TextView textViewRowPetSitterReviewAgoTime,
      @NonNull TextView textViewRowPetSitterReviewDetail,
      @NonNull TextView textViewRowPetSitterReviewScore,
      @NonNull TextView textViewRowPetSitterReviewWriterName) {
    this.rootView = rootView;
    this.cardRowPetSitterReviewWriter = cardRowPetSitterReviewWriter;
    this.imageViewRowPetSitterReviewWriter = imageViewRowPetSitterReviewWriter;
    this.ratingBarRowPetSitterReview = ratingBarRowPetSitterReview;
    this.textViewRowPetSitterReviewAgoTime = textViewRowPetSitterReviewAgoTime;
    this.textViewRowPetSitterReviewDetail = textViewRowPetSitterReviewDetail;
    this.textViewRowPetSitterReviewScore = textViewRowPetSitterReviewScore;
    this.textViewRowPetSitterReviewWriterName = textViewRowPetSitterReviewWriterName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowPetSitterReviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowPetSitterReviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_pet_sitter_review, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowPetSitterReviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardRowPetSitterReviewWriter;
      MaterialCardView cardRowPetSitterReviewWriter = ViewBindings.findChildViewById(rootView, id);
      if (cardRowPetSitterReviewWriter == null) {
        break missingId;
      }

      id = R.id.imageViewRowPetSitterReviewWriter;
      CircleImageView imageViewRowPetSitterReviewWriter = ViewBindings.findChildViewById(rootView, id);
      if (imageViewRowPetSitterReviewWriter == null) {
        break missingId;
      }

      id = R.id.ratingBarRowPetSitterReview;
      RatingBar ratingBarRowPetSitterReview = ViewBindings.findChildViewById(rootView, id);
      if (ratingBarRowPetSitterReview == null) {
        break missingId;
      }

      id = R.id.textViewRowPetSitterReviewAgoTime;
      TextView textViewRowPetSitterReviewAgoTime = ViewBindings.findChildViewById(rootView, id);
      if (textViewRowPetSitterReviewAgoTime == null) {
        break missingId;
      }

      id = R.id.textViewRowPetSitterReviewDetail;
      TextView textViewRowPetSitterReviewDetail = ViewBindings.findChildViewById(rootView, id);
      if (textViewRowPetSitterReviewDetail == null) {
        break missingId;
      }

      id = R.id.textViewRowPetSitterReviewScore;
      TextView textViewRowPetSitterReviewScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewRowPetSitterReviewScore == null) {
        break missingId;
      }

      id = R.id.textViewRowPetSitterReviewWriterName;
      TextView textViewRowPetSitterReviewWriterName = ViewBindings.findChildViewById(rootView, id);
      if (textViewRowPetSitterReviewWriterName == null) {
        break missingId;
      }

      return new RowPetSitterReviewBinding((LinearLayout) rootView, cardRowPetSitterReviewWriter,
          imageViewRowPetSitterReviewWriter, ratingBarRowPetSitterReview,
          textViewRowPetSitterReviewAgoTime, textViewRowPetSitterReviewDetail,
          textViewRowPetSitterReviewScore, textViewRowPetSitterReviewWriterName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
