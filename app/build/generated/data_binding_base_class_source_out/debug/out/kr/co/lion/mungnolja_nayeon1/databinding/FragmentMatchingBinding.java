// Generated by view binder compiler. Do not edit!
package kr.co.lion.mungnolja_nayeon1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.card.MaterialCardView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.lion.mungnolja_nayeon1.R;

public final class FragmentMatchingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton buttonMatchingDone;

  @NonNull
  public final MaterialCardView cardMatchingReservationDetail;

  @NonNull
  public final CircleImageView imageViewMatchingPet;

  @NonNull
  public final RecyclerView recyclerMatching;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textViewMatchingPetCareType;

  @NonNull
  public final TextView textViewMatchingPetName;

  @NonNull
  public final TextView textViewMatchingReservationAddress;

  @NonNull
  public final TextView textViewMatchingReservationDate;

  @NonNull
  public final TextView textViewMatchingReservationTime;

  @NonNull
  public final MaterialToolbar toolbarRealtimeLocation;

  private FragmentMatchingBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatButton buttonMatchingDone,
      @NonNull MaterialCardView cardMatchingReservationDetail,
      @NonNull CircleImageView imageViewMatchingPet, @NonNull RecyclerView recyclerMatching,
      @NonNull TextView textView2, @NonNull TextView textView3,
      @NonNull TextView textViewMatchingPetCareType, @NonNull TextView textViewMatchingPetName,
      @NonNull TextView textViewMatchingReservationAddress,
      @NonNull TextView textViewMatchingReservationDate,
      @NonNull TextView textViewMatchingReservationTime,
      @NonNull MaterialToolbar toolbarRealtimeLocation) {
    this.rootView = rootView;
    this.buttonMatchingDone = buttonMatchingDone;
    this.cardMatchingReservationDetail = cardMatchingReservationDetail;
    this.imageViewMatchingPet = imageViewMatchingPet;
    this.recyclerMatching = recyclerMatching;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.textViewMatchingPetCareType = textViewMatchingPetCareType;
    this.textViewMatchingPetName = textViewMatchingPetName;
    this.textViewMatchingReservationAddress = textViewMatchingReservationAddress;
    this.textViewMatchingReservationDate = textViewMatchingReservationDate;
    this.textViewMatchingReservationTime = textViewMatchingReservationTime;
    this.toolbarRealtimeLocation = toolbarRealtimeLocation;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMatchingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMatchingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_matching, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMatchingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonMatchingDone;
      AppCompatButton buttonMatchingDone = ViewBindings.findChildViewById(rootView, id);
      if (buttonMatchingDone == null) {
        break missingId;
      }

      id = R.id.cardMatchingReservationDetail;
      MaterialCardView cardMatchingReservationDetail = ViewBindings.findChildViewById(rootView, id);
      if (cardMatchingReservationDetail == null) {
        break missingId;
      }

      id = R.id.imageViewMatchingPet;
      CircleImageView imageViewMatchingPet = ViewBindings.findChildViewById(rootView, id);
      if (imageViewMatchingPet == null) {
        break missingId;
      }

      id = R.id.recyclerMatching;
      RecyclerView recyclerMatching = ViewBindings.findChildViewById(rootView, id);
      if (recyclerMatching == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textViewMatchingPetCareType;
      TextView textViewMatchingPetCareType = ViewBindings.findChildViewById(rootView, id);
      if (textViewMatchingPetCareType == null) {
        break missingId;
      }

      id = R.id.textViewMatchingPetName;
      TextView textViewMatchingPetName = ViewBindings.findChildViewById(rootView, id);
      if (textViewMatchingPetName == null) {
        break missingId;
      }

      id = R.id.textViewMatchingReservationAddress;
      TextView textViewMatchingReservationAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewMatchingReservationAddress == null) {
        break missingId;
      }

      id = R.id.textViewMatchingReservationDate;
      TextView textViewMatchingReservationDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewMatchingReservationDate == null) {
        break missingId;
      }

      id = R.id.textViewMatchingReservationTime;
      TextView textViewMatchingReservationTime = ViewBindings.findChildViewById(rootView, id);
      if (textViewMatchingReservationTime == null) {
        break missingId;
      }

      id = R.id.toolbarRealtimeLocation;
      MaterialToolbar toolbarRealtimeLocation = ViewBindings.findChildViewById(rootView, id);
      if (toolbarRealtimeLocation == null) {
        break missingId;
      }

      return new FragmentMatchingBinding((LinearLayout) rootView, buttonMatchingDone,
          cardMatchingReservationDetail, imageViewMatchingPet, recyclerMatching, textView2,
          textView3, textViewMatchingPetCareType, textViewMatchingPetName,
          textViewMatchingReservationAddress, textViewMatchingReservationDate,
          textViewMatchingReservationTime, toolbarRealtimeLocation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
