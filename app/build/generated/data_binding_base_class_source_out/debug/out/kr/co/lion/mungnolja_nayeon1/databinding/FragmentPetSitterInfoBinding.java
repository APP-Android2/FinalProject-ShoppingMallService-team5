// Generated by view binder compiler. Do not edit!
package kr.co.lion.mungnolja_nayeon1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.lion.mungnolja_nayeon1.R;

public final class FragmentPetSitterInfoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialCardView cardPetSitterInfo;

  @NonNull
  public final ImageView imageViewPetSitterInfo;

  @NonNull
  public final ImageView imageViewPetSitterInfoReviewButton;

  @NonNull
  public final RatingBar ratingBarPetSitterInfo;

  @NonNull
  public final TextView textViewPetSitterInfoCareerDetail;

  @NonNull
  public final TextView textViewPetSitterInfoCountReview;

  @NonNull
  public final TextView textViewPetSitterInfoDetail;

  @NonNull
  public final TextView textViewPetSitterInfoName;

  @NonNull
  public final TextView textViewPetSitterInfoScore;

  @NonNull
  public final TextView textViewPetSitterQualification;

  @NonNull
  public final MaterialToolbar toolbarPetSitterInfo;

  private FragmentPetSitterInfoBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialCardView cardPetSitterInfo, @NonNull ImageView imageViewPetSitterInfo,
      @NonNull ImageView imageViewPetSitterInfoReviewButton,
      @NonNull RatingBar ratingBarPetSitterInfo,
      @NonNull TextView textViewPetSitterInfoCareerDetail,
      @NonNull TextView textViewPetSitterInfoCountReview,
      @NonNull TextView textViewPetSitterInfoDetail, @NonNull TextView textViewPetSitterInfoName,
      @NonNull TextView textViewPetSitterInfoScore,
      @NonNull TextView textViewPetSitterQualification,
      @NonNull MaterialToolbar toolbarPetSitterInfo) {
    this.rootView = rootView;
    this.cardPetSitterInfo = cardPetSitterInfo;
    this.imageViewPetSitterInfo = imageViewPetSitterInfo;
    this.imageViewPetSitterInfoReviewButton = imageViewPetSitterInfoReviewButton;
    this.ratingBarPetSitterInfo = ratingBarPetSitterInfo;
    this.textViewPetSitterInfoCareerDetail = textViewPetSitterInfoCareerDetail;
    this.textViewPetSitterInfoCountReview = textViewPetSitterInfoCountReview;
    this.textViewPetSitterInfoDetail = textViewPetSitterInfoDetail;
    this.textViewPetSitterInfoName = textViewPetSitterInfoName;
    this.textViewPetSitterInfoScore = textViewPetSitterInfoScore;
    this.textViewPetSitterQualification = textViewPetSitterQualification;
    this.toolbarPetSitterInfo = toolbarPetSitterInfo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPetSitterInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPetSitterInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_pet_sitter_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPetSitterInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardPetSitterInfo;
      MaterialCardView cardPetSitterInfo = ViewBindings.findChildViewById(rootView, id);
      if (cardPetSitterInfo == null) {
        break missingId;
      }

      id = R.id.imageViewPetSitterInfo;
      ImageView imageViewPetSitterInfo = ViewBindings.findChildViewById(rootView, id);
      if (imageViewPetSitterInfo == null) {
        break missingId;
      }

      id = R.id.imageViewPetSitterInfoReviewButton;
      ImageView imageViewPetSitterInfoReviewButton = ViewBindings.findChildViewById(rootView, id);
      if (imageViewPetSitterInfoReviewButton == null) {
        break missingId;
      }

      id = R.id.ratingBarPetSitterInfo;
      RatingBar ratingBarPetSitterInfo = ViewBindings.findChildViewById(rootView, id);
      if (ratingBarPetSitterInfo == null) {
        break missingId;
      }

      id = R.id.textViewPetSitterInfoCareerDetail;
      TextView textViewPetSitterInfoCareerDetail = ViewBindings.findChildViewById(rootView, id);
      if (textViewPetSitterInfoCareerDetail == null) {
        break missingId;
      }

      id = R.id.textViewPetSitterInfoCountReview;
      TextView textViewPetSitterInfoCountReview = ViewBindings.findChildViewById(rootView, id);
      if (textViewPetSitterInfoCountReview == null) {
        break missingId;
      }

      id = R.id.textViewPetSitterInfoDetail;
      TextView textViewPetSitterInfoDetail = ViewBindings.findChildViewById(rootView, id);
      if (textViewPetSitterInfoDetail == null) {
        break missingId;
      }

      id = R.id.textViewPetSitterInfoName;
      TextView textViewPetSitterInfoName = ViewBindings.findChildViewById(rootView, id);
      if (textViewPetSitterInfoName == null) {
        break missingId;
      }

      id = R.id.textViewPetSitterInfoScore;
      TextView textViewPetSitterInfoScore = ViewBindings.findChildViewById(rootView, id);
      if (textViewPetSitterInfoScore == null) {
        break missingId;
      }

      id = R.id.textViewPetSitterQualification;
      TextView textViewPetSitterQualification = ViewBindings.findChildViewById(rootView, id);
      if (textViewPetSitterQualification == null) {
        break missingId;
      }

      id = R.id.toolbarPetSitterInfo;
      MaterialToolbar toolbarPetSitterInfo = ViewBindings.findChildViewById(rootView, id);
      if (toolbarPetSitterInfo == null) {
        break missingId;
      }

      return new FragmentPetSitterInfoBinding((LinearLayout) rootView, cardPetSitterInfo,
          imageViewPetSitterInfo, imageViewPetSitterInfoReviewButton, ratingBarPetSitterInfo,
          textViewPetSitterInfoCareerDetail, textViewPetSitterInfoCountReview,
          textViewPetSitterInfoDetail, textViewPetSitterInfoName, textViewPetSitterInfoScore,
          textViewPetSitterQualification, toolbarPetSitterInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
