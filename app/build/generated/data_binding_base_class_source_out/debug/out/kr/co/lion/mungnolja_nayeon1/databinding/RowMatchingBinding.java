// Generated by view binder compiler. Do not edit!
package kr.co.lion.mungnolja_nayeon1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.lion.mungnolja_nayeon1.R;

public final class RowMatchingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialCardView cardRowMatchingReservationDetail;

  @NonNull
  public final CircleImageView imageViewRowMatchingPetSitter;

  @NonNull
  public final ImageView imageViewRowMatchingReviewButton;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final TextView textViewRowMatchingCareer;

  @NonNull
  public final TextView textViewRowMatchingPetSitterName;

  @NonNull
  public final TextView textViewRowMatchingReservationDateTime;

  private RowMatchingBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialCardView cardRowMatchingReservationDetail,
      @NonNull CircleImageView imageViewRowMatchingPetSitter,
      @NonNull ImageView imageViewRowMatchingReviewButton, @NonNull RatingBar ratingBar,
      @NonNull TextView textViewRowMatchingCareer,
      @NonNull TextView textViewRowMatchingPetSitterName,
      @NonNull TextView textViewRowMatchingReservationDateTime) {
    this.rootView = rootView;
    this.cardRowMatchingReservationDetail = cardRowMatchingReservationDetail;
    this.imageViewRowMatchingPetSitter = imageViewRowMatchingPetSitter;
    this.imageViewRowMatchingReviewButton = imageViewRowMatchingReviewButton;
    this.ratingBar = ratingBar;
    this.textViewRowMatchingCareer = textViewRowMatchingCareer;
    this.textViewRowMatchingPetSitterName = textViewRowMatchingPetSitterName;
    this.textViewRowMatchingReservationDateTime = textViewRowMatchingReservationDateTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowMatchingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowMatchingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_matching, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowMatchingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardRowMatchingReservationDetail;
      MaterialCardView cardRowMatchingReservationDetail = ViewBindings.findChildViewById(rootView, id);
      if (cardRowMatchingReservationDetail == null) {
        break missingId;
      }

      id = R.id.imageViewRowMatchingPetSitter;
      CircleImageView imageViewRowMatchingPetSitter = ViewBindings.findChildViewById(rootView, id);
      if (imageViewRowMatchingPetSitter == null) {
        break missingId;
      }

      id = R.id.imageViewRowMatchingReviewButton;
      ImageView imageViewRowMatchingReviewButton = ViewBindings.findChildViewById(rootView, id);
      if (imageViewRowMatchingReviewButton == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.textViewRowMatchingCareer;
      TextView textViewRowMatchingCareer = ViewBindings.findChildViewById(rootView, id);
      if (textViewRowMatchingCareer == null) {
        break missingId;
      }

      id = R.id.textViewRowMatchingPetSitterName;
      TextView textViewRowMatchingPetSitterName = ViewBindings.findChildViewById(rootView, id);
      if (textViewRowMatchingPetSitterName == null) {
        break missingId;
      }

      id = R.id.textViewRowMatchingReservationDateTime;
      TextView textViewRowMatchingReservationDateTime = ViewBindings.findChildViewById(rootView, id);
      if (textViewRowMatchingReservationDateTime == null) {
        break missingId;
      }

      return new RowMatchingBinding((LinearLayout) rootView, cardRowMatchingReservationDetail,
          imageViewRowMatchingPetSitter, imageViewRowMatchingReviewButton, ratingBar,
          textViewRowMatchingCareer, textViewRowMatchingPetSitterName,
          textViewRowMatchingReservationDateTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
